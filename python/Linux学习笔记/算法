算法
 程序 = 数据结构+算法
时间复杂度
	常见时间复杂度排序
	o(1)<o(logn)<o(n)<o(nlogn)<o(n2)<o(n2logn)<o(n3)
空间复杂度
	用来评估算法内存占用大小的一个式子
	
二分法  27.1.53
	装饰器不能直接装饰递归函数，需要将原函数包装一下，用另个个同名函数调用该函数
	
冒泡排序
	两个for循环 比交两个相邻的数，大的往后走 一轮选出最大的数
选择排序 
	每次选出最小的数，往最前面放，然后循环
插入排序
快速排序
	修改递归最大层数
	import   sys
	sys.setrecursionlimit()  设置最大递归数
堆排序 28.1  
	树是一种数据结构
	树是一种可以递归定义的数据结构
	根节点，叶子节点
	树的深度（高度）
	树的度
	孩子节点/父节点
	子树
	满二叉树
	完全二叉树
	父节点与左孩子的关系
	i  2i+1
	父节点与右孩子的关系
	i  2i + 2
	堆
		大根堆 一颗完全二叉树，满足任一节点都比其孩子节点大
		小根堆 一颗完全二叉树，满足任一节点都比其孩子节点小
	
	
	
	
	
归并排序
	两个有序列表  28.2



基数排序
希尔排序

快速排序，堆排序，归并排序

一般情况下，就运行时间而言

快速排序<归并排序<堆排序

三种排序算法的缺点

	快速排序：极端效率下排序效率低
	归并排序：需要额外的内存开销
	堆排序：在快的排序算法中相对较慢
	
	
计数排序  28.3  

https://docs.python.org/3/

栈
import heapq

队列

from  collections import   deque
  单向队列  一头进，一头出
  双向队列  两头都可以进出

链表 28.7


计数排序
topn
返回



1.http1.0和http1.1有什么区别。
 2.TCP三次握手和四次挥手的流程，为什么断开连接要4次,如果握手只有两次，会出现什么。
 3.TIME_WAIT和CLOSE_WAIT的区别。
 4.说说你知道的几种HTTP响应码，比如200, 302, 404。
 5.当你用浏览器打开一个链接（如：http://www.javastack.cn）的时候，计算机做了哪些工作步骤。
 6.TCP/IP如何保证可靠性，说说TCP头的结构。
 7.如何避免浏览器缓存。
 8.如何理解HTTP协议的无状态性。
 9.简述Http请求get和post的区别以及数据包格式。
 10.HTTP有哪些method
 11.简述HTTP请求的报文格式。
 12.HTTP的长连接是什么意思。
	在HTTP/1.0中默认使用短连接。也就是说，客户端和服务器每进行一次HTTP操作，就建立一次连接，任务结束就中断连接。当客户端浏览器访问的某个HTML或其他类型的Web页中包含有其他的Web资源（如JavaScript文件、图像文件、CSS文件等），每遇到这样一个Web资源，浏览器就会重新建立一个HTTP会话。

	而从HTTP/1.1起，默认使用长连接，用以保持连接特性。使用长连接的HTTP协议，会在响应头加入这行代码：

	Connection:keep-alive
	在使用长连接的情况下，当一个网页打开完成后，客户端和服务器之间用于传输HTTP数据的TCP连接不会关闭，客户端再次访问这个服务器时，会继续使用这一条已经建立的连接。Keep-Alive不会永久保持连接，它有一个保持时间，可以在不同的服务器软件（如Apache）中设定这个时间。实现长连接需要客户端和服务端都支持长连接。
 13.HTTPS的加密方式是什么，讲讲整个加密解密流程。
 14.Http和https的三次握手有什么区别。
 15.什么是分块传送。
 16.Session和cookie的区别。
 
 7.什么是一致性hash。
 8.什么是restful，讲讲你理解的restful。
 9.如何设计一个良好的API。
 
  
 1.10亿个数字里里面找最小的10个。   top n 
 2.有1亿个数字，其中有2个是重复的，快速找到它，时间和空间要最优。
 3.2亿个随机生成的无序整数,找出中间大小的值。
 4.给一个不知道长度的（可能很大）输入字符串，设计一种方案，将重复的字符排重。
 5.遍历二叉树。
 6.有3n+1个数字，其中3n个中是重复的，只有1个是不重复的，怎么找出来。
 7.写一个字符串（如：www.javastack.cn）反转函数。
 8.常用的排序算法，快排，归并、冒泡。 快排的最优时间复杂度，最差复杂度。冒泡排序的优化方案。
 9.二分查找的时间复杂度，优势。
 10.一个已经构建好的TreeSet，怎么完成倒排序。
 11.什么是B+树，B-树，列出实际的使用场景。   https://cloud.tencent.com/developer/article/1392656
 12.一个单向链表，删除倒数第N个数据。
 13.200个有序的数组，每个数组里面100个元素，找出top20的元素。
 14.单向链表，查找中间的那个元素。
 
 
 数据库知识

 1.数据库隔离级别有哪些，各自的含义是什么，MYSQL默认的隔离级别是是什么。
	1 读取未提交的 
		可以看到其他事务未提交的数据   会出现脏读现象
	2 读取已提交的 
		可以看到其他事务已提交的数据
	3，可重复读
		不能读取其他事务已提交的  会出现幻读现象
	4，可串行化
		给数据加锁，最高隔离级别
	
 2.什么是幻读。
 3.MYSQL有哪些存储引擎，各自优缺点。
 4.高并发下，如何做到安全的修改同一行数据。
	1 使用悲观锁  select  *  from   tables   for update
	2 使用队列
	3 使用乐观锁  给数据version，当用户更新数据是，对比当前version与自己刚开始拿到的version是否相等，如果不得等于，表示在此期间数据被更改过，
 5.乐观锁和悲观锁是什么，INNODB的标准行级锁有哪2种，解释其含义。
 6.SQL优化的一般步骤是什么，怎么看执行计划，如何理解其中各个字段的含义。
 7.数据库会死锁吗，举一个死锁的例子，mysql怎么解决死锁。
 8.MYsql的索引原理，索引的类型有哪些，如何创建合理的索引，索引如何优化。
	1、应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如：
	2，应尽量避免在 where 子句中使用!=或<>操作符，否则将引擎放弃使用索引而进行全表扫描。
	3.、应尽量避免在 where 子句中使用 or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，如：
	4、in 和 not in 也要慎用，否则会导致全表扫描，如：
 9.聚集索引和非聚集索引的区别  https://blog.csdn.net/riemann_/article/details/90324846
	索引是通过二叉树的形式进行描述的，我们可以这样区分聚集与非聚集索引的区别：聚集索引的叶节点就是最终的数据节点，而非聚集索引的叶节仍然是索引节点，但它有一个指向最终数据的指针。
	我们把这种正文内容本身就是一种按照一定规则排列的目录称为“聚集索引”。  拼音查找
	我们把这种目录纯粹是目录，正文纯粹是正文的排序方式称为“非聚集索引”。  偏旁查找
	区别
		聚集索引一个表只能有一个，而非聚集索引一个表可以存在多个
		聚集索引存储记录是物理上连续存在，而非聚集索引是逻辑上的连续，物理存储并不连续
		聚集索引:物理存储按照索引排序；聚集索引是一种索引组织形式，索引的键值逻辑顺序决定了表数据行的物理存储顺序。
		非聚集索引:物理存储不按照索引排序；非聚集索引则就是普通索引了，仅仅只是对数据列创建相应的索引，不影响整个表的物理存储顺序。
		索引是通过二叉树的数据结构来描述的，我们可以这么理解聚簇索引：索引的叶节点就是数据节点。而非聚簇索引的叶节点仍然是索引节点，只不过有一个指针指向对应的数据块

 10.select for update 是什么含义，会锁表还是锁行或是其他。
 11.为什么要用Btree实现，它是怎么分裂的，什么时候分裂，为什么是平衡的。
 12.数据库的ACID是什么。
 13.某个表有近千万数据，CRUD比较慢，如何优化。
 14.Mysql怎么优化table scan的。
 15.如何写sql能够有效的使用到复合索引。
 16.mysql中in 和exists 区别。
 17.数据库自增主键可能的问题。
 18.MVCC的含义，如何实现的。
 19.你做过的项目里遇到分库分表了吗，怎么做的，有用到中间件么，比如sharding jdbc等,他 们的原理知道么。
 20.MYSQL的主从延迟怎么解决。
 
 
 1.常见的缓存策略有哪些，如何做到缓存(比如redis)与DB里的数据一致性，你们项目中用到了什么缓存系统，如何设计的。
 2.如何防止缓存击穿和雪崩。
	四、缓存雪崩

      描述：

      缓存雪崩是指缓存中数据大批量到过期时间，而查询数据量巨大，引起数据库压力过大甚至down机。和缓存击穿不同的是，        缓存击穿指并发查同一条数据，缓存雪崩是不同数据都过期了，很多数据都查不到从而查数据库。

     解决方案：
		缓存数据的过期时间设置随机，防止同一时间大量数据过期现象发生。
		如果缓存数据库是分布式部署，将热点数据均匀分布在不同搞得缓存数据库中。
		设置热点数据永远不过期。

 3.缓存数据过期后的更新如何设计。   https://www.jianshu.com/p/c5a9cb739936
	汰缓存是一种通用的缓存处理方式
	先淘汰缓存，再写数据库的时序是毋庸置疑的
	服务化是向业务方屏蔽底层数据库与缓存复杂性的一种通用方式
 4.redis的list结构相关的操作。
	lpush  rpush  lpop  rpop  linsert lrange llen lset rpoplpush  blpop brpop brpoplpush
 5.Redis的数据结构都有哪些。
	list  str hash  set  zset 
 6.Redis的使用要注意什么，讲讲持久化方式，内存设置，集群的应用和优劣势，淘汰策略等。
	https://blog.csdn.net/qq_34988624/article/details/86412393
 7.redis2和redis3的区别，redis3内部通讯机制。
 8.当前redis集群有哪些玩法，各自优缺点，场景。
 9.Memcache的原理，哪些数据适合放在缓存中。
 10.redis和memcached 的内存管理的区别。
 11.Redis的并发竞争问题如何解决，了解Redis事务的CAS操作吗。
 12.Redis的选举算法和流程是怎样的。
 13.redis的持久化的机制，aof和rdb的区别。
 14.redis的集群怎么同步的数据的。
	aof
 15.知道哪些redis的优化操作。
	1尽量使用短的key
	2避免使用keys * 因为Redis是单线程的，可能会阻塞前端
	3 设置key的有效期
	4，选择回收策略
 16.Reids的主从复制机制原理。
 17.Redis的线程模型是什么。
	IO多路复用
 18.请思考一个方案，设计一个可以控制缓存总体大小的自动适应的本地缓存。
 19.如何看待缓存的使用（本地缓存，集中式缓存），简述本地缓存和集中式缓存和优缺点。 
 20.本地缓存在并发使用时的注意事项。
 21 redis 优先队列
	https://www.cnblogs.com/happyday56/p/4142761.html
 22  官网命令
	http://doc.redisfans.com/
 
 
 
 
 
 算法：
 [1,1,2,2,3,4,4,5,5,5]  找出不重复的元素（黄包车）

 反转链表，要求时间复杂度O(N)，空间复杂度O(1)  （火币）

 非递归实现斐波那契数列 （爱奇艺）

 这一周股市价格为[2,6,1,4,8]，求哪一天买入哪一天卖出，可获得最大收益，最大收益为多少 （爱奇艺）

 一个整形无序数组，里面三个数只和等于一个目标值，求这三个数  （小米）

 扑克牌问题  （小米）
 有十张扑克牌，从上面开始抽，抽出一张放桌子上，然后再抽出一张放扑克牌的最下面，这样循环往复的操作，直到手里的牌都没有了。这时，桌子上牌的顺序正好是1 2 3 4 5 6 7 8 9 10。要求写代码求出原顺序

 手写大顶堆 （linkedMe）

 手写LRU 算法 （火币）

 字符串相加  （滴滴）
 两个数字类型的字符串，直接转int或者double肯定都放不下，然后求这两个数的和，返回值还是字符串，15分钟时间，要求无bug

 寻找目标值位置  （滴滴）
 有一个二维数组，数组横向有序，纵向有序，求目标值的位置，10分钟时间

 求字符串“efabcbaefehiabcba”中最长的回文数，不去重（美团）

 反转int类型的值x，不要借用String，只用int 即可。&& 针对该程序，写出其应有的测试用例 （美团）



























桶排序